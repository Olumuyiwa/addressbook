name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main
      - staging
      - preprod
      - prod

env:
  REGISTRY: moyewah
  IMAGE_NAME: springboot-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Print message Checkout complete
        run: echo "Code checkout complete"

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Print message Set up Jdk complete
        run: echo "Set up Jdk complete"

      - name: Build with Maven
        run: ./mvnw clean install

      - name: Test with Maven
        run: ./mvnw test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:latest .
          docker push $REGISTRY/$IMAGE_NAME:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Set Environment Variables
        id: set_env_vars
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          ENV_NAME=$(echo $BRANCH_NAME | tr '-' '_' | tr '[:lower:]' '[:upper:]')
          DB_URL=${{ secrets.MAIN_SPRING_DATASOURCE_URL }}
          DB_USERNAME=${{ secrets.MAIN_SPRING_DATASOURCE_USERNAME }}
          DB_PASSWORD=${{ secrets.MAIN_SPRING_DATASOURCE_PASSWORD }}

          if [[ "$ENV_NAME" == "STAGING" ]]; then
            DB_URL=${{ secrets.STAGING_SPRING_DATASOURCE_URL }}
            DB_USERNAME=${{ secrets.STAGING_SPRING_DATASOURCE_USERNAME }}
            DB_PASSWORD=${{ secrets.STAGING_SPRING_DATASOURCE_PASSWORD }}
          elif [[ "$ENV_NAME" == "PREPROD" ]]; then
            DB_URL=${{ secrets.PREPROD_SPRING_DATASOURCE_URL }}
            DB_USERNAME=${{ secrets.PREPROD_SPRING_DATASOURCE_USERNAME }}
            DB_PASSWORD=${{ secrets.PREPROD_SPRING_DATASOURCE_PASSWORD }}
          elif [[ "$ENV_NAME" == "PROD" ]]; then
            DB_URL=${{ secrets.PROD_SPRING_DATASOURCE_URL }}
            DB_USERNAME=${{ secrets.PROD_SPRING_DATASOURCE_USERNAME }}
            DB_PASSWORD=${{ secrets.PROD_SPRING_DATASOURCE_PASSWORD }}
          fi

          echo "DB_URL=$DB_URL" >> $GITHUB_ENV
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

      - name: Create namespace
        run: kubectl create namespace ${{ github.ref_name }} || true

      - name: Create Kubernetes Secrets
        run: |
          kubectl -n ${{ github.ref_name }} create secret generic db-credentials \
            --from-literal=db-url=$DB_URL \
            --from-literal=db-username=$DB_USERNAME \
            --from-literal=db-password=$DB_PASSWORD || true

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -n ${{ github.ref_name }} -f k8s/${{ github.ref_name }}/deployment.yml
          kubectl apply -n ${{ github.ref_name }} -f k8s/${{ github.ref_name }}/service.yml
